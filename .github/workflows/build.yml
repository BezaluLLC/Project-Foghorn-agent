name: Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.12]

    steps:

    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install PyInstaller
      run: pip install pyinstaller

    - name: Run build script (Windows)
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: .github\workflows\build.bat
    
    - name: Run build script (Ubuntu Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        chmod +x .github/workflows/build.sh
        .github/workflows/build.sh
    
    - name: Upload Executable (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v2
      with:
        name: linux-latest-asset
        path: ./dist/rewst_remote_agent

    - name: Run build script (MacOS)
      if: matrix.os == 'macos-latest'
      run: |
        chmod +x .github/workflows/build.sh
        .github/workflows/build.sh
      
    - name: Upload Executable (MacOS)
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v2
      with:
        name: macos-latest-asset
        path: ./dist/rewst_remote_agent

    - name: Install Windows SDK
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1

    - name: Locate signtool (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        $signtoolPath = Get-ChildItem -Path "C:\Program Files (x86)\Windows Kits" -Recurse -Filter signtool.exe | Select-Object -First 1 -ExpandProperty FullName
        echo "::set-output name=signtoolPath::$signtoolPath"
      id: locate-signtool
      shell: pwsh
    
    - name: Sign Executable (Windows)
      run: |
        $certBytes = [System.Convert]::FromBase64String($env:SELF_SIGNED_CERT)
        [System.IO.File]::WriteAllBytes("cert.pfx", $certBytes)
        & '${{ steps.locate-signtool.outputs.signtoolPath }}' sign /f cert.pfx /p $env:SELF_SIGNED_CERT_PASSWORD /tr http://timestamp.digicert.com /td sha256 /fd sha256 /a D:\a\rewst_remote_agent\rewst_remote_agent\dist\rewst_remote_agent.exe

      if: matrix.os == 'windows-latest'
      shell: pwsh
      env:
        SELF_SIGNED_CERT: ${{ secrets.SELF_SIGNED_CERT }}
        SELF_SIGNED_CERT_PASSWORD: ${{ secrets.SELF_SIGNED_CERT_PASSWORD }}
    
    - name: Upload Signed Executable (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v2
      with:
        name: windows-latest-signed-asset
        path: ./dist/rewst_remote_agent.exe 

      
  release:
    needs: build  # This job depends on the 'build' job
    runs-on: ubuntu-latest  # This job only runs on one runner

    steps:
    # - name: Bump version and push tag
    #   id: create_tag
    #   uses: mathieudutour/github-tag-action@v5
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     default_bump: patch # can be one of: major, minor, patch

    - uses: actions/checkout@v2
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create a GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: ${{ steps.tag_version.outputs.changelog }}

    - name: Create Release
      id: create_release 
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        release_name: Release ${{ steps.tag_version.outputs.new_tag }}
        draft: false
        prerelease: false

    - name: Download all assets
      uses: actions/download-artifact@v2

    - name: Upload Release Assets - Windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./windows-latest-signed-asset/rewst_remote_agent.exe
        asset_name: rewst_remote_agent.win.exe
        asset_content_type: application/octet-stream

    - name: Upload Release Assets - Linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./linux-latest-asset/rewst_remote_agent
        asset_name: rewst_remote_agent.linux.bin
        asset_content_type: application/octet-stream
    
    - name: Upload Release Assets - MacOS
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./macos-latest-asset/rewst_remote_agent
        asset_name: rewst_remote_agent.macos.bin
        asset_content_type: application/octet-stream
